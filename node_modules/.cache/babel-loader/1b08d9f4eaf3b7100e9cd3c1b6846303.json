{"ast":null,"code":"// Actions are the functions that we call throughout the project to change global state.\nexport const set_screenWidth = width => {\n  return {\n    type: 'SET_SCREENWIDTH',\n    value: width\n  };\n};\nexport const set_screenHeight = height => {\n  return {\n    type: 'SET_SCREENHEIGHT',\n    value: height\n  };\n};\nexport const increment_textSize = () => {\n  return {\n    type: 'INCREMENT_TEXTSIZE'\n  };\n};\nexport const decrement_textSize = () => {\n  return {\n    type: 'DECREMENT_TEXTSIZE'\n  };\n};\nexport const increment_lineWidth = () => {\n  return {\n    type: 'INCREMENT_LINEWIDTH'\n  };\n};\nexport const decrement_lineWidth = () => {\n  return {\n    type: 'DECREMENT_LINEWIDTH'\n  };\n};\nexport const increment_numLines = () => {\n  return {\n    type: 'INCREMENT_NUMLINES'\n  };\n};\nexport const decrement_numLines = () => {\n  return {\n    type: 'DECREMENT_NUMLINES'\n  };\n};\nexport const flip_lockScreen = () => {\n  return {\n    type: 'FLIP_LOCKSCREEN'\n  };\n};\nexport const flip_invertColors = () => {\n  return {\n    type: 'FLIP_INVERTCOLORS'\n  };\n};\nexport const flip_switchMenus = () => {\n  return {\n    type: 'FLIP_SWITCHMENUS'\n  };\n};\nexport const flip_recording = () => {\n  return {\n    type: 'FLIP_RECORDING'\n  };\n};\nexport const flip_recording_azure = () => {\n  return {\n    type: 'FLIP_RECORDING_AZURE'\n  };\n};\nexport const azure_key = key => {\n  return {\n    type: 'KEY_AZURE',\n    key: \"dsfdsf\"\n  };\n};\nexport const azure_region = region => {\n  return {\n    type: 'AZURE_REGION',\n    region: \"dsfdsf\"\n  };\n};\nexport const flip_micVisual = () => {\n  return {\n    type: 'FLIP_MICVISUAL'\n  };\n};\nexport const flip_entered_key = () => {\n  return {\n    type: 'FLIP_ENTERED_KEY'\n  };\n};\nexport const flip_entered_region = () => {\n  return {\n    type: 'FLIP_ENTERED_REGION'\n  };\n};","map":{"version":3,"sources":["/Users/nikhilr5/Desktop/ScribeAR/updatedStore/src/redux/actions.js"],"names":["set_screenWidth","width","type","value","set_screenHeight","height","increment_textSize","decrement_textSize","increment_lineWidth","decrement_lineWidth","increment_numLines","decrement_numLines","flip_lockScreen","flip_invertColors","flip_switchMenus","flip_recording","flip_recording_azure","azure_key","key","azure_region","region","flip_micVisual","flip_entered_key","flip_entered_region"],"mappings":"AAAA;AAEA,OAAO,MAAMA,eAAe,GAAIC,KAAD,IAAW;AACrC,SAAO;AACFC,IAAAA,IAAI,EAAE,iBADJ;AAEFC,IAAAA,KAAK,EAAEF;AAFL,GAAP;AAIJ,CALM;AAOP,OAAO,MAAMG,gBAAgB,GAAIC,MAAD,IAAY;AACvC,SAAO;AACFH,IAAAA,IAAI,EAAE,kBADJ;AAEFC,IAAAA,KAAK,EAAEE;AAFL,GAAP;AAIJ,CALM;AAOP,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACnC,SAAO;AAAEJ,IAAAA,IAAI,EAAE;AAAR,GAAP;AACJ,CAFM;AAIP,OAAO,MAAMK,kBAAkB,GAAG,MAAM;AACnC,SAAO;AAAEL,IAAAA,IAAI,EAAE;AAAR,GAAP;AACJ,CAFM;AAIP,OAAO,MAAMM,mBAAmB,GAAG,MAAM;AACpC,SAAO;AAAEN,IAAAA,IAAI,EAAE;AAAR,GAAP;AACJ,CAFM;AAIP,OAAO,MAAMO,mBAAmB,GAAG,MAAM;AACpC,SAAO;AAAEP,IAAAA,IAAI,EAAE;AAAR,GAAP;AACJ,CAFM;AAIP,OAAO,MAAMQ,kBAAkB,GAAG,MAAM;AACnC,SAAO;AAAER,IAAAA,IAAI,EAAE;AAAR,GAAP;AACJ,CAFM;AAIP,OAAO,MAAMS,kBAAkB,GAAG,MAAM;AACnC,SAAO;AAAET,IAAAA,IAAI,EAAE;AAAR,GAAP;AACJ,CAFM;AAIP,OAAO,MAAMU,eAAe,GAAG,MAAM;AAChC,SAAO;AAAEV,IAAAA,IAAI,EAAE;AAAR,GAAP;AACJ,CAFM;AAIP,OAAO,MAAMW,iBAAiB,GAAG,MAAM;AAClC,SAAO;AAAEX,IAAAA,IAAI,EAAE;AAAR,GAAP;AACJ,CAFM;AAIP,OAAO,MAAMY,gBAAgB,GAAG,MAAM;AACjC,SAAO;AAAEZ,IAAAA,IAAI,EAAE;AAAR,GAAP;AACJ,CAFM;AAGP,OAAO,MAAMa,cAAc,GAAG,MAAM;AAC/B,SAAO;AAAEb,IAAAA,IAAI,EAAE;AAAR,GAAP;AACJ,CAFM;AAIP,OAAO,MAAMc,oBAAoB,GAAG,MAAM;AACrC,SAAO;AAACd,IAAAA,IAAI,EAAE;AAAP,GAAP;AACJ,CAFM;AAIP,OAAO,MAAMe,SAAS,GAAIC,GAAD,IAAS;AAC7B,SAAO;AACFhB,IAAAA,IAAI,EAAE,WADJ;AAEFgB,IAAAA,GAAG,EAAE;AAFH,GAAP;AAIJ,CALM;AAMP,OAAO,MAAMC,YAAY,GAAIC,MAAD,IAAY;AACnC,SAAO;AACFlB,IAAAA,IAAI,EAAE,cADJ;AAEFkB,IAAAA,MAAM,EAAE;AAFN,GAAP;AAIJ,CALM;AAMP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAC/B,SAAO;AAAEnB,IAAAA,IAAI,EAAE;AAAR,GAAP;AACJ,CAFM;AAGP,OAAO,MAAMoB,gBAAgB,GAAG,MAAM;AACjC,SAAO;AAAEpB,IAAAA,IAAI,EAAE;AAAR,GAAP;AACJ,CAFM;AAGP,OAAO,MAAMqB,mBAAmB,GAAG,MAAM;AACpC,SAAO;AAAErB,IAAAA,IAAI,EAAE;AAAR,GAAP;AACJ,CAFM","sourcesContent":["// Actions are the functions that we call throughout the project to change global state.\r\n\r\nexport const set_screenWidth = (width) => {\r\n     return {\r\n          type: 'SET_SCREENWIDTH',\r\n          value: width\r\n     };\r\n}\r\n\r\nexport const set_screenHeight = (height) => {\r\n     return {\r\n          type: 'SET_SCREENHEIGHT',\r\n          value: height\r\n     };\r\n}\r\n\r\nexport const increment_textSize = () => {\r\n     return { type: 'INCREMENT_TEXTSIZE' };\r\n}\r\n\r\nexport const decrement_textSize = () => {\r\n     return { type: 'DECREMENT_TEXTSIZE' };\r\n}\r\n\r\nexport const increment_lineWidth = () => {\r\n     return { type: 'INCREMENT_LINEWIDTH' };\r\n}\r\n\r\nexport const decrement_lineWidth = () => {\r\n     return { type: 'DECREMENT_LINEWIDTH' };\r\n}\r\n\r\nexport const increment_numLines = () => {\r\n     return { type: 'INCREMENT_NUMLINES' };\r\n}\r\n\r\nexport const decrement_numLines = () => {\r\n     return { type: 'DECREMENT_NUMLINES' };\r\n}\r\n\r\nexport const flip_lockScreen = () => {\r\n     return { type: 'FLIP_LOCKSCREEN' };\r\n}\r\n\r\nexport const flip_invertColors = () => {\r\n     return { type: 'FLIP_INVERTCOLORS' };\r\n}\r\n\r\nexport const flip_switchMenus = () => {\r\n     return { type: 'FLIP_SWITCHMENUS' };\r\n}\r\nexport const flip_recording = () => {\r\n     return { type: 'FLIP_RECORDING' };\r\n}\r\n\r\nexport const flip_recording_azure = () => {\r\n     return {type: 'FLIP_RECORDING_AZURE'}\r\n}\r\n\r\nexport const azure_key = (key) => {\r\n     return {\r\n          type: 'KEY_AZURE',\r\n          key: \"dsfdsf\"\r\n     }\r\n}\r\nexport const azure_region = (region) => {\r\n     return {\r\n          type: 'AZURE_REGION',\r\n          region: \"dsfdsf\"\r\n     }\r\n}\r\nexport const flip_micVisual = () => {\r\n     return { type: 'FLIP_MICVISUAL' };\r\n}\r\nexport const flip_entered_key = () => {\r\n     return { type: 'FLIP_ENTERED_KEY' };\r\n}\r\nexport const flip_entered_region = () => {\r\n     return { type: 'FLIP_ENTERED_REGION' };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}