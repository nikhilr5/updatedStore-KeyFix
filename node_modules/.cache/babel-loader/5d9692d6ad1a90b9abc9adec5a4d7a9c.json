{"ast":null,"code":"import { combineReducers } from 'redux';\n\nconst textSizeReducer = (state = 6, action) => {\n  switch (action.type) {\n    case 'INCREMENT_TEXTSIZE':\n      return state + 1;\n\n    case 'DECREMENT_TEXTSIZE':\n      return Math.max(1, state - 1);\n\n    default:\n      return state;\n  }\n};\n\nconst lineWidthReducer = (state = 10, action) => {\n  switch (action.type) {\n    case 'INCREMENT_LINEWIDTH':\n      return Math.min(10, state + 1);\n\n    case 'DECREMENT_LINEWIDTH':\n      return Math.max(1, state - 1);\n\n    default:\n      return state;\n  }\n};\n\nconst numLinesReducer = (state = 4, action) => {\n  switch (action.type) {\n    case 'INCREMENT_NUMLINES':\n      return state + 1;\n\n    case 'DECREMENT_NUMLINES':\n      return Math.max(1, state - 1);\n\n    default:\n      return state;\n  }\n};\n\nconst lockScreenReducer = (state = false, action) => {\n  if (action.type === 'FLIP_LOCKSCREEN') return !state;else return state;\n};\n\nconst invertMicVisualReducer = (state = 0, action) => {\n  if (action.type === 'FLIP_MICVISUAL') {\n    state = state + 1;\n\n    if (state == 4) {\n      state = 0;\n    }\n  }\n\n  return state;\n};\n\nconst switchMenusReducer = (state = false, action) => {\n  if (action.type === 'FLIP_SWITCHMENUS') return !state;else return state;\n};\n\nconst invertColorsReducer = (state = false, action) => {\n  if (action.type === 'FLIP_INVERTCOLORS') return !state;else return state;\n};\n\nconst recordingReducer = (state = true, action) => {\n  if (action.type === 'FLIP_RECORDING') return !state;else return state;\n};\n\nconst recordingAzureReducer = (state = false, action) => {\n  if (action.type == 'FLIP_RECORDING_AZURE') return !state;else return state;\n};\n\nconst enteredKeyReducer = (state = false, action) => {\n  if (action.type == 'FLIP_ENTERED_KEY') return !state;else return state;\n};\n\nconst enteredRegionReducer = (state = false, action) => {\n  if (action.type == 'FLIP_ENTERED_REGION') return !state;else return state;\n};\n\nconst allReducers = combineReducers({\n  enteredRegion: enteredRegionReducer,\n  enteredKey: enteredKeyReducer,\n  textSize: textSizeReducer,\n  lineWidth: lineWidthReducer,\n  numLines: numLinesReducer,\n  lockScreen: lockScreenReducer,\n  invertColors: invertColorsReducer,\n  recording: recordingReducer,\n  mic: invertMicVisualReducer,\n  switchMenus: switchMenusReducer,\n  recordingAzure: recordingAzureReducer\n});\nexport default allReducers;","map":{"version":3,"sources":["/Users/nikhilr5/Desktop/ScribeAR/updatedStore/src/redux/reducers.js"],"names":["combineReducers","textSizeReducer","state","action","type","Math","max","lineWidthReducer","min","numLinesReducer","lockScreenReducer","invertMicVisualReducer","switchMenusReducer","invertColorsReducer","recordingReducer","recordingAzureReducer","enteredKeyReducer","enteredRegionReducer","allReducers","enteredRegion","enteredKey","textSize","lineWidth","numLines","lockScreen","invertColors","recording","mic","switchMenus","recordingAzure"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nconst textSizeReducer = (state = 6, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_TEXTSIZE':\r\n               return state + 1;\r\n          case 'DECREMENT_TEXTSIZE':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst lineWidthReducer = (state = 10, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_LINEWIDTH':\r\n               return Math.min(10, state + 1)\r\n          case 'DECREMENT_LINEWIDTH':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst numLinesReducer = (state = 4, action) => {\r\n     switch (action.type) {\r\n          case 'INCREMENT_NUMLINES':\r\n               return state + 1;\r\n          case 'DECREMENT_NUMLINES':\r\n               return Math.max(1, state - 1);\r\n          default:\r\n               return state;\r\n     }\r\n}\r\n\r\nconst lockScreenReducer = (state = false, action) => {\r\n     if (action.type === 'FLIP_LOCKSCREEN')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\nconst invertMicVisualReducer = (state = 0, action) => {\r\n  if (action.type === 'FLIP_MICVISUAL'){\r\n       state = state + 1;\r\n       if (state == 4) {\r\n            state = 0;\r\n       }\r\n  }\r\n  return state;\r\n}\r\n\r\nconst switchMenusReducer = (state = false, action) => {\r\n     if (action.type === 'FLIP_SWITCHMENUS')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\nconst invertColorsReducer = (state = false, action) => {\r\n     if (action.type === 'FLIP_INVERTCOLORS')\r\n          return !state;\r\n     else return state;\r\n}\r\n\r\nconst recordingReducer = (state = true, action) => {\r\n     if (action.type === 'FLIP_RECORDING')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst recordingAzureReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_RECORDING_AZURE')\r\n          return !state\r\n     else return state\r\n}\r\n\r\nconst enteredKeyReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_ENTERED_KEY')\r\n          return !state\r\n     else return state\r\n}\r\nconst enteredRegionReducer = (state = false, action) =>{\r\n     if (action.type == 'FLIP_ENTERED_REGION')\r\n          return !state\r\n     else return state\r\n}\r\n\r\n\r\n\r\nconst allReducers = combineReducers({\r\n     enteredRegion: enteredRegionReducer,\r\n     enteredKey: enteredKeyReducer,\r\n     textSize: textSizeReducer,\r\n     lineWidth: lineWidthReducer,\r\n     numLines: numLinesReducer,\r\n     lockScreen: lockScreenReducer,\r\n     invertColors: invertColorsReducer,\r\n     recording: recordingReducer,\r\n     mic: invertMicVisualReducer,\r\n     switchMenus: switchMenusReducer,\r\n     recordingAzure: recordingAzureReducer,\r\n\r\n\r\n});\r\n\r\nexport default allReducers;\r\n"]},"metadata":{},"sourceType":"module"}