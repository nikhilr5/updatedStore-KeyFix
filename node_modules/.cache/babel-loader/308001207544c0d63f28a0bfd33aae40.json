{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilr5/Desktop/ScribeAR/updatedStore/src/components/AzureTopSpace/index.js\";\nimport React from 'react';\nimport './index.css';\nimport Options from './AzureOptions';\nimport SwipeableTemporaryDrawer from '../../components/AzureDrawer'; // JavaScript functions used: setTimeout, clearTimeout, bind, getElementById,\n// addEventListener, removeEventListener\n// React functions used: constructor, setState, componentDidMount, render\n\nclass AzureTopSpace extends React.Component {\n  // // When options are shown:\n  //      // Clicking in the optionsSpace triggers show() then resetTimeout().\n  //      // Clicking in the hideSpace triggers hide().\n  // // When options are not shown:\n  //      // Clicking anywhere in the outer div triggers show().\n  // // Event listeners enforce these rules in outer and optionsSpace elements.\n  // // hideSpace uses a simple onClick, which only works when the element is shown.\n  //\n  // constructor(props) {\n  //      super(props)\n  //      this.state = {\n  //           shown: true, // Whether the options area is shown. Used in JSX.\n  //           // Set 15 second timeout and when it expires, run this.hide.\n  //           // Immediately store the returned id for later use.\n  //           timeoutId: setTimeout(this.hide.bind(this), 15000)\n  //      }\n  //      // Bind functions so we can use the keyword 'this' inside them.\n  //      this.hide = this.hide.bind(this)\n  //      this.show = this.show.bind(this)\n  //      this.resetTimeout = this.resetTimeout.bind(this)\n  // }\n  //\n  // hide() { // Hide the options area from view.\n  //      this.setState({ shown: false })\n  //      document.getElementById('outer').addEventListener('click', this.show)\n  // }\n  //\n  // show() { // Show the options area. If already shown, just reset timeout.\n  //      this.setState({ shown: true })\n  //      document.getElementById('outer').removeEventListener('click', this.show)\n  //      this.resetTimeout()\n  // }\n  //\n  // resetTimeout() { // Reset the 15 second timer for hiding the options.\n  //      clearTimeout(this.state.timeoutId) // Cancel the timeout set earlier.\n  //      var toId = setTimeout(this.hide, 15000) // Set a new 15 second timeout.\n  //      this.setState({timeoutId: toId}) // Store the id of the new timeout.\n  // }\n  // // The first time the component mounts, add an event listener to the options\n  // // space, so whenever it's clicked, it shows.\n  // componentDidMount() {\n  //      document.getElementById('optionsSpace').addEventListener('click', this.show)\n  // }\n  render() {\n    var h = '32vh'; // I don't remember why I set the height like this.\n    // The Options component takes a function as a prop.\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AzureTopSpace\",\n      id: \"outer\",\n      style: {\n        height: h\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SwipeableTemporaryDrawer, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default AzureTopSpace;","map":{"version":3,"sources":["/Users/nikhilr5/Desktop/ScribeAR/updatedStore/src/components/AzureTopSpace/index.js"],"names":["React","Options","SwipeableTemporaryDrawer","AzureTopSpace","Component","render","h","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,wBAAP,MAAqC,8BAArC,C,CAGA;AACA;AACA;;AACA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACJ,QAAIC,CAAC,GAAG,MAAR,CADI,CACY;AAChB;;AACA,wBACK;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,EAAE,EAAC,OAAlC;AAA0C,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAED;AAAV,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACD;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,wBAAD;AAA0B,MAAA,KAAK,EAAG,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADC,CADN,CADL;AASJ;;AAzDsC;;AA4D5C,eAAeH,aAAf","sourcesContent":["import React from 'react'\nimport './index.css'\nimport Options from './AzureOptions'\nimport SwipeableTemporaryDrawer from '../../components/AzureDrawer'\n\n\n// JavaScript functions used: setTimeout, clearTimeout, bind, getElementById,\n// addEventListener, removeEventListener\n// React functions used: constructor, setState, componentDidMount, render\nclass AzureTopSpace extends React.Component {\n     // // When options are shown:\n     //      // Clicking in the optionsSpace triggers show() then resetTimeout().\n     //      // Clicking in the hideSpace triggers hide().\n     // // When options are not shown:\n     //      // Clicking anywhere in the outer div triggers show().\n     // // Event listeners enforce these rules in outer and optionsSpace elements.\n     // // hideSpace uses a simple onClick, which only works when the element is shown.\n     //\n     // constructor(props) {\n     //      super(props)\n     //      this.state = {\n     //           shown: true, // Whether the options area is shown. Used in JSX.\n     //           // Set 15 second timeout and when it expires, run this.hide.\n     //           // Immediately store the returned id for later use.\n     //           timeoutId: setTimeout(this.hide.bind(this), 15000)\n     //      }\n     //      // Bind functions so we can use the keyword 'this' inside them.\n     //      this.hide = this.hide.bind(this)\n     //      this.show = this.show.bind(this)\n     //      this.resetTimeout = this.resetTimeout.bind(this)\n     // }\n     //\n     // hide() { // Hide the options area from view.\n     //      this.setState({ shown: false })\n     //      document.getElementById('outer').addEventListener('click', this.show)\n     // }\n     //\n     // show() { // Show the options area. If already shown, just reset timeout.\n     //      this.setState({ shown: true })\n     //      document.getElementById('outer').removeEventListener('click', this.show)\n     //      this.resetTimeout()\n     // }\n     //\n     // resetTimeout() { // Reset the 15 second timer for hiding the options.\n     //      clearTimeout(this.state.timeoutId) // Cancel the timeout set earlier.\n     //      var toId = setTimeout(this.hide, 15000) // Set a new 15 second timeout.\n     //      this.setState({timeoutId: toId}) // Store the id of the new timeout.\n     // }\n     // // The first time the component mounts, add an event listener to the options\n     // // space, so whenever it's clicked, it shows.\n     // componentDidMount() {\n     //      document.getElementById('optionsSpace').addEventListener('click', this.show)\n     // }\n\n     render() {\n          var h = '32vh'; // I don't remember why I set the height like this.\n          // The Options component takes a function as a prop.\n          return (\n               <div className=\"AzureTopSpace\" id=\"outer\" style={{ height: h }}>\n                     <div >\n                    <div className=\"item-wrapper\">\n                        <SwipeableTemporaryDrawer color = \"secondary\"/>\n                    </div>\n                    </div>\n               </div>\n          )\n     }\n}\n\nexport default AzureTopSpace;\n"]},"metadata":{},"sourceType":"module"}