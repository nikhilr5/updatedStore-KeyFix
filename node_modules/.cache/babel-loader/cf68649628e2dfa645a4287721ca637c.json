{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { EventType, PlatformEvent } from \"../common/Exports\";\nexport class SpeechRecognitionEvent extends PlatformEvent {\n  constructor(eventName, requestId, sessionId, eventType = EventType.Info) {\n    super(eventName, eventType);\n    this.privRequestId = requestId;\n    this.privSessionId = sessionId;\n  }\n\n  get requestId() {\n    return this.privRequestId;\n  }\n\n  get sessionId() {\n    return this.privSessionId;\n  }\n\n} // tslint:disable-next-line:max-classes-per-file\n\nexport class RecognitionTriggeredEvent extends SpeechRecognitionEvent {\n  constructor(requestId, sessionId, audioSourceId, audioNodeId) {\n    super(\"RecognitionTriggeredEvent\", requestId, sessionId);\n    this.privAudioSourceId = audioSourceId;\n    this.privAudioNodeId = audioNodeId;\n  }\n\n  get audioSourceId() {\n    return this.privAudioSourceId;\n  }\n\n  get audioNodeId() {\n    return this.privAudioNodeId;\n  }\n\n} // tslint:disable-next-line:max-classes-per-file\n\nexport class ListeningStartedEvent extends SpeechRecognitionEvent {\n  constructor(requestId, sessionId, audioSourceId, audioNodeId) {\n    super(\"ListeningStartedEvent\", requestId, sessionId);\n    this.privAudioSourceId = audioSourceId;\n    this.privAudioNodeId = audioNodeId;\n  }\n\n  get audioSourceId() {\n    return this.privAudioSourceId;\n  }\n\n  get audioNodeId() {\n    return this.privAudioNodeId;\n  }\n\n} // tslint:disable-next-line:max-classes-per-file\n\nexport class ConnectingToServiceEvent extends SpeechRecognitionEvent {\n  constructor(requestId, authFetchEventid, sessionId) {\n    super(\"ConnectingToServiceEvent\", requestId, sessionId);\n    this.privAuthFetchEventid = authFetchEventid;\n  }\n\n  get authFetchEventid() {\n    return this.privAuthFetchEventid;\n  }\n\n} // tslint:disable-next-line:max-classes-per-file\n\nexport class RecognitionStartedEvent extends SpeechRecognitionEvent {\n  constructor(requestId, audioSourceId, audioNodeId, authFetchEventId, sessionId) {\n    super(\"RecognitionStartedEvent\", requestId, sessionId);\n    this.privAudioSourceId = audioSourceId;\n    this.privAudioNodeId = audioNodeId;\n    this.privAuthFetchEventId = authFetchEventId;\n  }\n\n  get audioSourceId() {\n    return this.privAudioSourceId;\n  }\n\n  get audioNodeId() {\n    return this.privAudioNodeId;\n  }\n\n  get authFetchEventId() {\n    return this.privAuthFetchEventId;\n  }\n\n}\nexport var RecognitionCompletionStatus;\n\n(function (RecognitionCompletionStatus) {\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"Success\"] = 0] = \"Success\";\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"AudioSourceError\"] = 1] = \"AudioSourceError\";\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"AudioSourceTimeout\"] = 2] = \"AudioSourceTimeout\";\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"AuthTokenFetchError\"] = 3] = \"AuthTokenFetchError\";\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"AuthTokenFetchTimeout\"] = 4] = \"AuthTokenFetchTimeout\";\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"UnAuthorized\"] = 5] = \"UnAuthorized\";\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"ConnectTimeout\"] = 6] = \"ConnectTimeout\";\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"ConnectError\"] = 7] = \"ConnectError\";\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"ClientRecognitionActivityTimeout\"] = 8] = \"ClientRecognitionActivityTimeout\";\n  RecognitionCompletionStatus[RecognitionCompletionStatus[\"UnknownError\"] = 9] = \"UnknownError\";\n})(RecognitionCompletionStatus || (RecognitionCompletionStatus = {})); // tslint:disable-next-line:max-classes-per-file\n\n\nexport class RecognitionEndedEvent extends SpeechRecognitionEvent {\n  constructor(requestId, audioSourceId, audioNodeId, authFetchEventId, sessionId, serviceTag, status, error) {\n    super(\"RecognitionEndedEvent\", requestId, sessionId, status === RecognitionCompletionStatus.Success ? EventType.Info : EventType.Error);\n    this.privAudioSourceId = audioSourceId;\n    this.privAudioNodeId = audioNodeId;\n    this.privAuthFetchEventId = authFetchEventId;\n    this.privStatus = status;\n    this.privError = error;\n    this.privServiceTag = serviceTag;\n  }\n\n  get audioSourceId() {\n    return this.privAudioSourceId;\n  }\n\n  get audioNodeId() {\n    return this.privAudioNodeId;\n  }\n\n  get authFetchEventId() {\n    return this.privAuthFetchEventId;\n  }\n\n  get serviceTag() {\n    return this.privServiceTag;\n  }\n\n  get status() {\n    return this.privStatus;\n  }\n\n  get error() {\n    return this.privError;\n  }\n\n}","map":{"version":3,"sources":["src/common.speech/RecognitionEvents.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { EventType, PlatformEvent } from \"../common/Exports\";\r\n\r\nexport class SpeechRecognitionEvent extends PlatformEvent {\r\n    private privRequestId: string;\r\n    private privSessionId: string;\r\n\r\n    constructor(eventName: string, requestId: string, sessionId: string, eventType: EventType = EventType.Info) {\r\n        super(eventName, eventType);\r\n\r\n        this.privRequestId = requestId;\r\n        this.privSessionId = sessionId;\r\n    }\r\n\r\n    public get requestId(): string {\r\n        return this.privRequestId;\r\n    }\r\n\r\n    public get sessionId(): string {\r\n        return this.privSessionId;\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class RecognitionTriggeredEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    constructor(requestId: string, sessionId: string, audioSourceId: string, audioNodeId: string) {\r\n        super(\"RecognitionTriggeredEvent\", requestId, sessionId);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class ListeningStartedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n\r\n    constructor(requestId: string, sessionId: string, audioSourceId: string, audioNodeId: string) {\r\n        super(\"ListeningStartedEvent\", requestId, sessionId);\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class ConnectingToServiceEvent extends SpeechRecognitionEvent {\r\n    private privAuthFetchEventid: string;\r\n\r\n    constructor(requestId: string, authFetchEventid: string, sessionId: string) {\r\n        super(\"ConnectingToServiceEvent\", requestId, sessionId);\r\n        this.privAuthFetchEventid = authFetchEventid;\r\n    }\r\n\r\n    public get authFetchEventid(): string {\r\n        return this.privAuthFetchEventid;\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class RecognitionStartedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAuthFetchEventId: string;\r\n\r\n    constructor(requestId: string, audioSourceId: string, audioNodeId: string, authFetchEventId: string, sessionId: string) {\r\n        super(\"RecognitionStartedEvent\", requestId, sessionId);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n}\r\n\r\nexport enum RecognitionCompletionStatus {\r\n    Success,\r\n    AudioSourceError,\r\n    AudioSourceTimeout,\r\n    AuthTokenFetchError,\r\n    AuthTokenFetchTimeout,\r\n    UnAuthorized,\r\n    ConnectTimeout,\r\n    ConnectError,\r\n    ClientRecognitionActivityTimeout,\r\n    UnknownError,\r\n}\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class RecognitionEndedEvent extends SpeechRecognitionEvent {\r\n    private privAudioSourceId: string;\r\n    private privAudioNodeId: string;\r\n    private privAuthFetchEventId: string;\r\n    private privServiceTag: string;\r\n    private privStatus: RecognitionCompletionStatus;\r\n    private privError: string;\r\n\r\n    constructor(\r\n        requestId: string,\r\n        audioSourceId: string,\r\n        audioNodeId: string,\r\n        authFetchEventId: string,\r\n        sessionId: string,\r\n        serviceTag: string,\r\n        status: RecognitionCompletionStatus,\r\n        error: string) {\r\n\r\n        super(\"RecognitionEndedEvent\", requestId, sessionId, status === RecognitionCompletionStatus.Success ? EventType.Info : EventType.Error);\r\n\r\n        this.privAudioSourceId = audioSourceId;\r\n        this.privAudioNodeId = audioNodeId;\r\n        this.privAuthFetchEventId = authFetchEventId;\r\n        this.privStatus = status;\r\n        this.privError = error;\r\n        this.privServiceTag = serviceTag;\r\n    }\r\n\r\n    public get audioSourceId(): string {\r\n        return this.privAudioSourceId;\r\n    }\r\n\r\n    public get audioNodeId(): string {\r\n        return this.privAudioNodeId;\r\n    }\r\n\r\n    public get authFetchEventId(): string {\r\n        return this.privAuthFetchEventId;\r\n    }\r\n\r\n    public get serviceTag(): string {\r\n        return this.privServiceTag;\r\n    }\r\n\r\n    public get status(): RecognitionCompletionStatus {\r\n        return this.privStatus;\r\n    }\r\n\r\n    public get error(): string {\r\n        return this.privError;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}