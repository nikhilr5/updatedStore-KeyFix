{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nexport class ParticipantsListPayloadResponse {\n  constructor(json) {\n    this.privParticipantsPayloadResponse = JSON.parse(json);\n  }\n\n  static fromJSON(json) {\n    return new ParticipantsListPayloadResponse(json);\n  }\n\n  get roomid() {\n    return this.privParticipantsPayloadResponse.roomid;\n  }\n\n  get id() {\n    return this.privParticipantsPayloadResponse.id;\n  }\n\n  get command() {\n    return this.privParticipantsPayloadResponse.command;\n  }\n\n  get participants() {\n    return this.privParticipantsPayloadResponse.participants;\n  }\n\n  get token() {\n    return this.privParticipantsPayloadResponse.token;\n  }\n\n  get translateTo() {\n    return this.privParticipantsPayloadResponse.translateTo;\n  }\n\n  get profanityFilter() {\n    return this.privParticipantsPayloadResponse.profanityFilter;\n  }\n\n  get roomProfanityFilter() {\n    return this.privParticipantsPayloadResponse.roomProfanityFilter;\n  }\n\n  get roomLocked() {\n    return this.privParticipantsPayloadResponse.roomLocked;\n  }\n\n  get muteAll() {\n    return this.privParticipantsPayloadResponse.muteAll;\n  }\n\n  get type() {\n    return this.privParticipantsPayloadResponse.type;\n  }\n\n} // tslint:disable-next-line: max-classes-per-file\n\nexport class ParticipantPayloadResponse {\n  constructor(json) {\n    this.privParticipantPayloadResponse = JSON.parse(json);\n  }\n\n  static fromJSON(json) {\n    return new ParticipantPayloadResponse(json);\n  }\n\n  get nickname() {\n    return this.privParticipantPayloadResponse.nickname;\n  }\n\n  get locale() {\n    return this.privParticipantPayloadResponse.locale;\n  }\n\n  get usetts() {\n    return this.privParticipantPayloadResponse.usetts;\n  }\n\n  get ismuted() {\n    return this.privParticipantPayloadResponse.ismuted;\n  }\n\n  get ishost() {\n    return this.privParticipantPayloadResponse.ishost;\n  }\n\n  get participantId() {\n    return this.privParticipantPayloadResponse.participantId;\n  }\n\n  get avatar() {\n    return this.privParticipantPayloadResponse.avatar;\n  }\n\n}","map":{"version":3,"sources":["src/common.speech/Transcription/ServiceMessages/ParticipantResponsePayload.ts"],"names":[],"mappings":"AAAA;AACA;AAgCA,OAAM,MAAO,+BAAP,CAAsC;AAGxC,EAAA,WAAA,CAAoB,IAApB,EAAgC;AAC5B,SAAK,+BAAL,GAAuC,IAAI,CAAC,KAAL,CAAW,IAAX,CAAvC;AACH;;AAEM,SAAO,QAAP,CAAgB,IAAhB,EAA4B;AAC/B,WAAO,IAAI,+BAAJ,CAAoC,IAApC,CAAP;AACH;;AAED,MAAW,MAAX,GAAiB;AACb,WAAO,KAAK,+BAAL,CAAqC,MAA5C;AACH;;AAED,MAAW,EAAX,GAAa;AACT,WAAO,KAAK,+BAAL,CAAqC,EAA5C;AACH;;AAED,MAAW,OAAX,GAAkB;AACd,WAAO,KAAK,+BAAL,CAAqC,OAA5C;AACH;;AAED,MAAW,YAAX,GAAuB;AACnB,WAAO,KAAK,+BAAL,CAAqC,YAA5C;AACH;;AAED,MAAW,KAAX,GAAgB;AACZ,WAAO,KAAK,+BAAL,CAAqC,KAA5C;AACH;;AAED,MAAW,WAAX,GAAsB;AAClB,WAAO,KAAK,+BAAL,CAAqC,WAA5C;AACH;;AAED,MAAW,eAAX,GAA0B;AACtB,WAAO,KAAK,+BAAL,CAAqC,eAA5C;AACH;;AAED,MAAW,mBAAX,GAA8B;AAC1B,WAAO,KAAK,+BAAL,CAAqC,mBAA5C;AACH;;AAED,MAAW,UAAX,GAAqB;AACjB,WAAO,KAAK,+BAAL,CAAqC,UAA5C;AACH;;AAED,MAAW,OAAX,GAAkB;AACd,WAAO,KAAK,+BAAL,CAAqC,OAA5C;AACH;;AAED,MAAW,IAAX,GAAe;AACX,WAAO,KAAK,+BAAL,CAAqC,IAA5C;AACH;;AArDuC,C,CAyD5C;;AACA,OAAM,MAAO,0BAAP,CAAiC;AAInC,EAAA,WAAA,CAAoB,IAApB,EAAgC;AAC5B,SAAK,8BAAL,GAAsC,IAAI,CAAC,KAAL,CAAW,IAAX,CAAtC;AACH;;AAEM,SAAO,QAAP,CAAgB,IAAhB,EAA4B;AAC/B,WAAO,IAAI,0BAAJ,CAA+B,IAA/B,CAAP;AACH;;AAED,MAAW,QAAX,GAAmB;AACf,WAAO,KAAK,8BAAL,CAAoC,QAA3C;AACH;;AAED,MAAW,MAAX,GAAiB;AACb,WAAO,KAAK,8BAAL,CAAoC,MAA3C;AACH;;AAED,MAAW,MAAX,GAAiB;AACb,WAAO,KAAK,8BAAL,CAAoC,MAA3C;AACH;;AAED,MAAW,OAAX,GAAkB;AACd,WAAO,KAAK,8BAAL,CAAoC,OAA3C;AACH;;AAED,MAAW,MAAX,GAAiB;AACb,WAAO,KAAK,8BAAL,CAAoC,MAA3C;AACH;;AAED,MAAW,aAAX,GAAwB;AACpB,WAAO,KAAK,8BAAL,CAAoC,aAA3C;AACH;;AAED,MAAW,MAAX,GAAiB;AACb,WAAO,KAAK,8BAAL,CAAoC,MAA3C;AACH;;AAtCkC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the payload for incoming list of participants\r\n */\r\nexport interface IParticipantsListPayloadResponse {\r\n    roomid: string;\r\n    id: string;\r\n    command: string;\r\n    participants: IParticipantPayloadResponse[];\r\n    token: string;\r\n    translateTo: string[];\r\n    profanityFilter: string;\r\n    roomProfanityFilter: string;\r\n    roomLocked: boolean;\r\n    muteAll: boolean;\r\n    type: string;\r\n}\r\n\r\n/**\r\n * Defines the payload for incoming participant\r\n */\r\nexport interface IParticipantPayloadResponse {\r\n    nickname: string;\r\n    locale: string;\r\n    usetts: boolean;\r\n    ismuted: boolean;\r\n    ishost: boolean;\r\n    participantId: string;\r\n    avatar?: string;\r\n}\r\n\r\nexport class ParticipantsListPayloadResponse implements IParticipantsListPayloadResponse {\r\n    private privParticipantsPayloadResponse: IParticipantsListPayloadResponse;\r\n\r\n    private constructor(json: string) {\r\n        this.privParticipantsPayloadResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): ParticipantsListPayloadResponse {\r\n        return new ParticipantsListPayloadResponse(json);\r\n    }\r\n\r\n    public get roomid(): string {\r\n        return this.privParticipantsPayloadResponse.roomid;\r\n    }\r\n\r\n    public get id(): string {\r\n        return this.privParticipantsPayloadResponse.id;\r\n    }\r\n\r\n    public get command(): string {\r\n        return this.privParticipantsPayloadResponse.command;\r\n    }\r\n\r\n    public get participants(): IParticipantPayloadResponse[] {\r\n        return this.privParticipantsPayloadResponse.participants;\r\n    }\r\n\r\n    public get token(): string {\r\n        return this.privParticipantsPayloadResponse.token;\r\n    }\r\n\r\n    public get translateTo(): string[] {\r\n        return this.privParticipantsPayloadResponse.translateTo;\r\n    }\r\n\r\n    public get profanityFilter(): string {\r\n        return this.privParticipantsPayloadResponse.profanityFilter;\r\n    }\r\n\r\n    public get roomProfanityFilter(): string {\r\n        return this.privParticipantsPayloadResponse.roomProfanityFilter;\r\n    }\r\n\r\n    public get roomLocked(): boolean {\r\n        return this.privParticipantsPayloadResponse.roomLocked;\r\n    }\r\n\r\n    public get muteAll(): boolean {\r\n        return this.privParticipantsPayloadResponse.muteAll;\r\n    }\r\n\r\n    public get type(): string {\r\n        return this.privParticipantsPayloadResponse.type;\r\n    }\r\n\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class ParticipantPayloadResponse implements IParticipantPayloadResponse {\r\n\r\n    private privParticipantPayloadResponse: IParticipantPayloadResponse;\r\n\r\n    private constructor(json: string) {\r\n        this.privParticipantPayloadResponse = JSON.parse(json);\r\n    }\r\n\r\n    public static fromJSON(json: string): ParticipantPayloadResponse {\r\n        return new ParticipantPayloadResponse(json);\r\n    }\r\n\r\n    public get nickname(): string {\r\n        return this.privParticipantPayloadResponse.nickname;\r\n    }\r\n\r\n    public get locale(): string {\r\n        return this.privParticipantPayloadResponse.locale;\r\n    }\r\n\r\n    public get usetts(): boolean {\r\n        return this.privParticipantPayloadResponse.usetts;\r\n    }\r\n\r\n    public get ismuted(): boolean {\r\n        return this.privParticipantPayloadResponse.ismuted;\r\n    }\r\n\r\n    public get ishost(): boolean {\r\n        return this.privParticipantPayloadResponse.ishost;\r\n    }\r\n\r\n    public get participantId(): string {\r\n        return this.privParticipantPayloadResponse.participantId;\r\n    }\r\n\r\n    public get avatar(): string {\r\n        return this.privParticipantPayloadResponse.avatar;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}