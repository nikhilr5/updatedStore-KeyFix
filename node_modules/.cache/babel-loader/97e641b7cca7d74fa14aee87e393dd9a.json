{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { Context, SpeechServiceConfig } from \"./Exports\";\nexport var SynthesisServiceType;\n\n(function (SynthesisServiceType) {\n  SynthesisServiceType[SynthesisServiceType[\"Standard\"] = 0] = \"Standard\";\n  SynthesisServiceType[SynthesisServiceType[\"Custom\"] = 1] = \"Custom\";\n})(SynthesisServiceType || (SynthesisServiceType = {}));\n\nexport class SynthesizerConfig {\n  constructor(speechServiceConfig, parameters) {\n    this.privSynthesisServiceType = SynthesisServiceType.Standard;\n    this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new SpeechServiceConfig(new Context(null));\n    this.privParameters = parameters;\n  }\n\n  get parameters() {\n    return this.privParameters;\n  }\n\n  get synthesisServiceType() {\n    return this.privSynthesisServiceType;\n  }\n\n  set synthesisServiceType(value) {\n    this.privSynthesisServiceType = value;\n  }\n\n  get SpeechServiceConfig() {\n    return this.privSpeechServiceConfig;\n  }\n\n}","map":{"version":3,"sources":["src/common.speech/SynthesizerConfig.ts"],"names":[],"mappings":"AAAA;AACA;AAGA,SAAQ,OAAR,EAAiB,mBAAjB,QAA2C,WAA3C;AAEA,OAAA,IAAY,oBAAZ;;AAAA,CAAA,UAAY,oBAAZ,EAAgC;AAC5B,EAAA,oBAAA,CAAA,oBAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACA,EAAA,oBAAA,CAAA,oBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACH,CAHD,EAAY,oBAAoB,KAApB,oBAAoB,GAAA,EAAA,CAAhC;;AAKA,OAAM,MAAO,iBAAP,CAAwB;AAK1B,EAAA,WAAA,CACI,mBADJ,EAEI,UAFJ,EAEkC;AAN1B,SAAA,wBAAA,GAAiD,oBAAoB,CAAC,QAAtE;AAOJ,SAAK,uBAAL,GAA+B,mBAAmB,GAAG,mBAAH,GAAyB,IAAI,mBAAJ,CAAwB,IAAI,OAAJ,CAAY,IAAZ,CAAxB,CAA3E;AACA,SAAK,cAAL,GAAsB,UAAtB;AACH;;AAED,MAAW,UAAX,GAAqB;AACjB,WAAO,KAAK,cAAZ;AACH;;AAED,MAAW,oBAAX,GAA+B;AAC3B,WAAO,KAAK,wBAAZ;AACH;;AAED,MAAW,oBAAX,CAAgC,KAAhC,EAA2D;AACvD,SAAK,wBAAL,GAAgC,KAAhC;AACH;;AAED,MAAW,mBAAX,GAA8B;AAC1B,WAAO,KAAK,uBAAZ;AACH;;AA1ByB","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { PropertyCollection } from \"../sdk/Exports\";\r\nimport {Context, SpeechServiceConfig} from \"./Exports\";\r\n\r\nexport enum SynthesisServiceType {\r\n    Standard,\r\n    Custom,\r\n}\r\n\r\nexport class SynthesizerConfig {\r\n    private privSynthesisServiceType: SynthesisServiceType = SynthesisServiceType.Standard;\r\n    private privSpeechServiceConfig: SpeechServiceConfig;\r\n    private privParameters: PropertyCollection;\r\n\r\n    constructor(\r\n        speechServiceConfig: SpeechServiceConfig,\r\n        parameters: PropertyCollection) {\r\n        this.privSpeechServiceConfig = speechServiceConfig ? speechServiceConfig : new SpeechServiceConfig(new Context(null));\r\n        this.privParameters = parameters;\r\n    }\r\n\r\n    public get parameters(): PropertyCollection {\r\n        return this.privParameters;\r\n    }\r\n\r\n    public get synthesisServiceType(): SynthesisServiceType {\r\n        return this.privSynthesisServiceType;\r\n    }\r\n\r\n    public set synthesisServiceType(value: SynthesisServiceType) {\r\n        this.privSynthesisServiceType = value;\r\n    }\r\n\r\n    public get SpeechServiceConfig(): SpeechServiceConfig {\r\n        return this.privSpeechServiceConfig;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}