{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilr5/Desktop/ScribeAR/updatedStore/src/components/TopSpace/index.js\";\nimport React from 'react';\nimport './index.css';\nimport Options from './Options';\nimport Droppable from '../DnD/Droppable';\nimport '../MiddleSpace/index.css';\nimport SwipeableTemporaryDrawer from '../Drawer'; // JavaScript functions used: setTimeout, clearTimeout, bind, getElementById,\n// addEventListener, removeEventListener\n// React functions used: constructor, setState, componentDidMount, render\n\nclass TopSpace extends React.Component {\n  // When options are shown:\n  // Clicking in the optionsSpace triggers show() then resetTimeout().\n  // Clicking in the hideSpace triggers hide().\n  // When options are not shown:\n  // Clicking anywhere in the outer div triggers show().\n  // Event listeners enforce these rules in outer and optionsSpace elements.\n  // hideSpace uses a simple onClick, which only works when the element is shown.\n  // constructor(props) {\n  //      super(props)\n  //      this.state = {\n  //           shown: true, // Whether the options area is shown. Used in JSX.\n  //           // Set 15 second timeout and when it expires, run this.hide.\n  //           // Immediately store the returned id for later use.\n  //           timeoutId: setTimeout(this.hide.bind(this), 15000)\n  //      }\n  //      // Bind functions so we can use the keyword 'this' inside them.\n  //      this.hide = this.hide.bind(this)\n  //      this.show = this.show.bind(this)\n  //      this.resetTimeout = this.resetTimeout.bind(this)\n  // }\n  // hide() { // Hide the options area from view.\n  //      this.setState({ shown: false })\n  //      document.getElementById('outer').addEventListener('click', this.show)\n  // }\n  // show() { // Show the options area. If already shown, just reset timeout.\n  //      this.setState({ shown: true })\n  //      document.getElementById('outer').removeEventListener('click', this.show)\n  //      this.resetTimeout()\n  // }\n  // resetTimeout() { // Reset the 15 second timer for hiding the options.\n  //      clearTimeout(this.state.timeoutId) // Cancel the timeout set earlier.\n  //      var toId = setTimeout(this.hide, 15000) // Set a new 15 second timeout.\n  //      this.setState({timeoutId: toId}) // Store the id of the new timeout.\n  // }\n  // // The first time the component mounts, add an event listener to the options\n  // // space, so whenever it's clicked, it shows.\n  // componentDidMount() {\n  //      document.getElementById('optionsSpace').addEventListener('click', this.show)\n  // }\n  render() {\n    var h = '2vh'; // I don't remember why I set the height like this.\n    // The Options component takes a function as a prop.\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TopSpace\",\n      id: \"outer\",\n      style: {\n        height: h\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(SwipeableTemporaryDrawer, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 31\n      }\n    }))));\n  }\n\n}\n\nexport default TopSpace;","map":{"version":3,"sources":["/Users/nikhilr5/Desktop/ScribeAR/updatedStore/src/components/TopSpace/index.js"],"names":["React","Options","Droppable","SwipeableTemporaryDrawer","TopSpace","Component","render","h","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAO,0BAAP;AACA,OAAOC,wBAAP,MAAqC,WAArC,C,CAEA;AACA;AACA;;AACA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAClC;AACK;AACA;AACL;AACK;AACL;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACJ,QAAIC,CAAC,GAAG,KAAR,CADI,CACW;AACf;;AACA,wBACK;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,EAAE,EAAC,OAA7B;AAAqC,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAED;AAAV,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKM;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,wBAAD;AAA0B,MAAA,KAAK,EAAG,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALN,CADL,CADL;AAcJ;;AA9DiC;;AAiEvC,eAAeH,QAAf","sourcesContent":["import React from 'react'\r\nimport './index.css'\r\nimport Options from './Options'\r\nimport Droppable from '../DnD/Droppable'\r\nimport '../MiddleSpace/index.css'\r\nimport SwipeableTemporaryDrawer from '../Drawer'\r\n\r\n// JavaScript functions used: setTimeout, clearTimeout, bind, getElementById,\r\n// addEventListener, removeEventListener\r\n// React functions used: constructor, setState, componentDidMount, render\r\nclass TopSpace extends React.Component {\r\n     // When options are shown:\r\n          // Clicking in the optionsSpace triggers show() then resetTimeout().\r\n          // Clicking in the hideSpace triggers hide().\r\n     // When options are not shown:\r\n          // Clicking anywhere in the outer div triggers show().\r\n     // Event listeners enforce these rules in outer and optionsSpace elements.\r\n     // hideSpace uses a simple onClick, which only works when the element is shown.\r\n\r\n     // constructor(props) {\r\n     //      super(props)\r\n     //      this.state = {\r\n     //           shown: true, // Whether the options area is shown. Used in JSX.\r\n     //           // Set 15 second timeout and when it expires, run this.hide.\r\n     //           // Immediately store the returned id for later use.\r\n     //           timeoutId: setTimeout(this.hide.bind(this), 15000)\r\n     //      }\r\n     //      // Bind functions so we can use the keyword 'this' inside them.\r\n     //      this.hide = this.hide.bind(this)\r\n     //      this.show = this.show.bind(this)\r\n     //      this.resetTimeout = this.resetTimeout.bind(this)\r\n     // }\r\n\r\n     // hide() { // Hide the options area from view.\r\n     //      this.setState({ shown: false })\r\n     //      document.getElementById('outer').addEventListener('click', this.show)\r\n     // }\r\n\r\n     // show() { // Show the options area. If already shown, just reset timeout.\r\n     //      this.setState({ shown: true })\r\n     //      document.getElementById('outer').removeEventListener('click', this.show)\r\n     //      this.resetTimeout()\r\n     // }\r\n\r\n     // resetTimeout() { // Reset the 15 second timer for hiding the options.\r\n     //      clearTimeout(this.state.timeoutId) // Cancel the timeout set earlier.\r\n     //      var toId = setTimeout(this.hide, 15000) // Set a new 15 second timeout.\r\n     //      this.setState({timeoutId: toId}) // Store the id of the new timeout.\r\n     // }\r\n     // // The first time the component mounts, add an event listener to the options\r\n     // // space, so whenever it's clicked, it shows.\r\n     // componentDidMount() {\r\n     //      document.getElementById('optionsSpace').addEventListener('click', this.show)\r\n     // }\r\n\r\n     render() {\r\n          var h = '2vh'; // I don't remember why I set the height like this.\r\n          // The Options component takes a function as a prop.\r\n          return (\r\n               <div className=\"TopSpace\" id=\"outer\" style={{ height: h }}>\r\n                    <div >\r\n                         {/* <div id=\"optionsSpace\">\r\n                              <Options resetTimeout={this.resetTimeout} />\r\n                         </div>\r\n                         <div id=\"hideSpace\" onClick={this.hide}>Hide</div> */}\r\n                          <div className=\"item-wrapper\">\r\n                              <SwipeableTemporaryDrawer color = \"secondary\"/>\r\n                         </div>\r\n\r\n                    </div>\r\n               </div>\r\n          )\r\n     }\r\n}\r\n\r\nexport default TopSpace;\r\n"]},"metadata":{},"sourceType":"module"}