{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { RecognitionStatus, SimpleSpeechPhrase } from \"../../src/common.speech/Exports\";\nimport { NoMatchReason } from \"./Exports\";\n/**\n * Contains detailed information for NoMatch recognition results.\n * @class NoMatchDetails\n */\n\nexport class NoMatchDetails {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {NoMatchReason} reason - The no-match reason.\n   */\n  constructor(reason) {\n    this.privReason = reason;\n  }\n  /**\n   * Creates an instance of NoMatchDetails object for the NoMatch SpeechRecognitionResults.\n   * @member NoMatchDetails.fromResult\n   * @function\n   * @public\n   * @param {SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult}\n   *        result - The recognition result that was not recognized.\n   * @returns {NoMatchDetails} The no match details object being created.\n   */\n\n\n  static fromResult(result) {\n    const simpleSpeech = SimpleSpeechPhrase.fromJSON(result.json);\n    let reason = NoMatchReason.NotRecognized;\n\n    switch (simpleSpeech.RecognitionStatus) {\n      case RecognitionStatus.BabbleTimeout:\n        reason = NoMatchReason.InitialBabbleTimeout;\n        break;\n\n      case RecognitionStatus.InitialSilenceTimeout:\n        reason = NoMatchReason.InitialSilenceTimeout;\n        break;\n\n      default:\n        reason = NoMatchReason.NotRecognized;\n        break;\n    }\n\n    return new NoMatchDetails(reason);\n  }\n  /**\n   * The reason the recognition was canceled.\n   * @member NoMatchDetails.prototype.reason\n   * @function\n   * @public\n   * @returns {NoMatchReason} Specifies the reason canceled.\n   */\n\n\n  get reason() {\n    return this.privReason;\n  }\n\n}","map":{"version":3,"sources":["src/sdk/NoMatchDetails.ts"],"names":[],"mappings":"AAAA;AACA;AAEA,SAAS,iBAAT,EAA4B,kBAA5B,QAAsD,iCAAtD;AACA,SAAkC,aAAlC,QAA8G,WAA9G;AAEA;;;;;AAIA,OAAM,MAAO,cAAP,CAAqB;AAGvB;;;;;AAKA,EAAA,WAAA,CAAoB,MAApB,EAAyC;AACrC,SAAK,UAAL,GAAkB,MAAlB;AACH;AAED;;;;;;;;;;;AASO,SAAO,UAAP,CAAkB,MAAlB,EAA0G;AAC7G,UAAM,YAAY,GAAuB,kBAAkB,CAAC,QAAnB,CAA4B,MAAM,CAAC,IAAnC,CAAzC;AAEA,QAAI,MAAM,GAAkB,aAAa,CAAC,aAA1C;;AAEA,YAAQ,YAAY,CAAC,iBAArB;AACI,WAAK,iBAAiB,CAAC,aAAvB;AACI,QAAA,MAAM,GAAG,aAAa,CAAC,oBAAvB;AACA;;AACJ,WAAK,iBAAiB,CAAC,qBAAvB;AACI,QAAA,MAAM,GAAG,aAAa,CAAC,qBAAvB;AACA;;AACJ;AACI,QAAA,MAAM,GAAG,aAAa,CAAC,aAAvB;AACA;AATR;;AAYA,WAAO,IAAI,cAAJ,CAAmB,MAAnB,CAAP;AACH;AAED;;;;;;;;;AAOA,MAAW,MAAX,GAAiB;AACb,WAAO,KAAK,UAAZ;AACH;;AAlDsB","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { RecognitionStatus, SimpleSpeechPhrase } from \"../../src/common.speech/Exports\";\r\nimport { IntentRecognitionResult, NoMatchReason, SpeechRecognitionResult, TranslationRecognitionResult } from \"./Exports\";\r\n\r\n/**\r\n * Contains detailed information for NoMatch recognition results.\r\n * @class NoMatchDetails\r\n */\r\nexport class NoMatchDetails {\r\n    private privReason: NoMatchReason;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {NoMatchReason} reason - The no-match reason.\r\n     */\r\n    private constructor(reason: NoMatchReason) {\r\n        this.privReason = reason;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of NoMatchDetails object for the NoMatch SpeechRecognitionResults.\r\n     * @member NoMatchDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult}\r\n     *        result - The recognition result that was not recognized.\r\n     * @returns {NoMatchDetails} The no match details object being created.\r\n     */\r\n    public static fromResult(result: SpeechRecognitionResult | IntentRecognitionResult | TranslationRecognitionResult): NoMatchDetails {\r\n        const simpleSpeech: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(result.json);\r\n\r\n        let reason: NoMatchReason = NoMatchReason.NotRecognized;\r\n\r\n        switch (simpleSpeech.RecognitionStatus) {\r\n            case RecognitionStatus.BabbleTimeout:\r\n                reason = NoMatchReason.InitialBabbleTimeout;\r\n                break;\r\n            case RecognitionStatus.InitialSilenceTimeout:\r\n                reason = NoMatchReason.InitialSilenceTimeout;\r\n                break;\r\n            default:\r\n                reason = NoMatchReason.NotRecognized;\r\n                break;\r\n        }\r\n\r\n        return new NoMatchDetails(reason);\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member NoMatchDetails.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {NoMatchReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): NoMatchReason {\r\n        return this.privReason;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}