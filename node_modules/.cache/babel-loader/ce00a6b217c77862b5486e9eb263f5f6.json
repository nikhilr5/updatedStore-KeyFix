{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilr5/Desktop/ScribeAR/updatedStore/src/components/AzureTopSpace/AzureOptions/AzureRecord/index.js\";\nimport React from 'react';\nimport './index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { flip_recording_azure } from '../../../../redux/actions'; // This code only works if the initial state is Off. It's surprisingly way harder\n// to get this to work if you want the inital state of the checkbox to be checked.\n\nexport default function AzureRecord(props) {\n  const recordingAzure = state => state.recordingAzure;\n\n  const setting = useSelector(recordingAzure); // useDispatch returns the state modifying function, invoked below.\n\n  const dispatch = useDispatch(); // flip recording when space bar is pressed\n\n  document.body.onkeyup = function (e) {\n    // run function when any key is pressed\n    if (e.keyCode === 32) // keyCode 32 is the space bar\n      dispatch(flip_recording_azure());\n  }; // record-btn-wrapper toggles between the two buttons using the TopSpace\n  // hidden/shown CSS.\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 6\n    }\n  }, setting ? \"Recording\" : \"Record\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"record-btn-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: setting ? \"record-btn hidden\" : \"record-btn shown\",\n    onClick: () => dispatch(flip_recording_azure()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: setting ? \"stop-btn shown\" : \"stop-btn hidden\",\n    onClick: () => dispatch(flip_recording_azure()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/nikhilr5/Desktop/ScribeAR/updatedStore/src/components/AzureTopSpace/AzureOptions/AzureRecord/index.js"],"names":["React","useSelector","useDispatch","flip_recording_azure","AzureRecord","props","recordingAzure","state","setting","dispatch","document","body","onkeyup","e","keyCode"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAAQC,oBAAR,QAAmC,2BAAnC,C,CAEA;AACA;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACtC,QAAMC,cAAc,GAAIC,KAAD,IAAWA,KAAK,CAACD,cAAxC;;AACA,QAAME,OAAO,GAAGP,WAAW,CAACK,cAAD,CAA3B,CAFsC,CAGtC;;AACA,QAAMG,QAAQ,GAAGP,WAAW,EAA5B,CAJsC,CAMxC;;AACAQ,EAAAA,QAAQ,CAACC,IAAT,CAAcC,OAAd,GAAwB,UAASC,CAAT,EAAY;AAAE;AACpC,QAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACjBL,MAAAA,QAAQ,CAACN,oBAAoB,EAArB,CAAR;AACT,GAHE,CAPwC,CAW3C;AACA;;;AACA,sBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMK,OAAO,GAAG,WAAH,GAAiB,QAD9B,eAEK;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAK,IAAA,SAAS,EAAEA,OAAO,GAAG,mBAAH,GAAyB,kBAAhD;AACK,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACN,oBAAoB,EAArB,CAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,eAGK;AAAK,IAAA,SAAS,EAAEK,OAAO,GAAG,gBAAH,GAAsB,iBAA7C;AACK,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACN,oBAAoB,EAArB,CAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHL,CAFL,CADL;AAWC","sourcesContent":["\nimport React from 'react'\nimport './index.css'\nimport {useSelector, useDispatch } from 'react-redux'\nimport {flip_recording_azure} from '../../../../redux/actions'\n\n// This code only works if the initial state is Off. It's surprisingly way harder\n// to get this to work if you want the inital state of the checkbox to be checked.\n\nexport default function AzureRecord(props) {\n     const recordingAzure = (state) => state.recordingAzure\n     const setting = useSelector(recordingAzure)\n     // useDispatch returns the state modifying function, invoked below.\n     const dispatch = useDispatch()\n\n   // flip recording when space bar is pressed\n   document.body.onkeyup = function(e) { // run function when any key is pressed\n     if (e.keyCode === 32) // keyCode 32 is the space bar\n          dispatch(flip_recording_azure())\n}\n// record-btn-wrapper toggles between the two buttons using the TopSpace\n// hidden/shown CSS.\nreturn (\n     <div>\n          {setting ? \"Recording\" : \"Record\"}\n          <div className=\"record-btn-wrapper\">\n               <div className={setting ? \"record-btn hidden\" : \"record-btn shown\"}\n                    onClick={() => dispatch(flip_recording_azure())} />\n               <div className={setting ? \"stop-btn shown\" : \"stop-btn hidden\"}\n                    onClick={() => dispatch(flip_recording_azure())} />\n          </div>\n     </div>\n)\n}\n"]},"metadata":{},"sourceType":"module"}