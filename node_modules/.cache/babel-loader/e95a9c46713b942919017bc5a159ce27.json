{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\nimport { CancellationErrorCodePropertyName, EnumTranslation, SimpleSpeechPhrase } from \"../common.speech/Exports\";\nimport { CancellationErrorCode, CancellationReason, RecognitionResult } from \"./Exports\";\n/**\n * Contains detailed information about why a result was canceled.\n * @class CancellationDetails\n */\n\nexport class CancellationDetails {\n  /**\n   * Creates and initializes an instance of this class.\n   * @constructor\n   * @param {CancellationReason} reason - The cancellation reason.\n   * @param {string} errorDetails - The error details, if provided.\n   */\n  constructor(reason, errorDetails, errorCode) {\n    this.privReason = reason;\n    this.privErrorDetails = errorDetails;\n    this.privErrorCode = errorCode;\n  }\n  /**\n   * Creates an instance of CancellationDetails object for the canceled RecognitionResult.\n   * @member CancellationDetails.fromResult\n   * @function\n   * @public\n   * @param {RecognitionResult | SpeechSynthesisResult} result - The result that was canceled.\n   * @returns {CancellationDetails} The cancellation details object being created.\n   */\n\n\n  static fromResult(result) {\n    let reason = CancellationReason.Error;\n    let errorCode = CancellationErrorCode.NoError;\n\n    if (result instanceof RecognitionResult && !!result.json) {\n      const simpleSpeech = SimpleSpeechPhrase.fromJSON(result.json);\n      reason = EnumTranslation.implTranslateCancelResult(simpleSpeech.RecognitionStatus);\n    }\n\n    if (!!result.properties) {\n      errorCode = CancellationErrorCode[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])];\n    }\n\n    return new CancellationDetails(reason, result.errorDetails, errorCode);\n  }\n  /**\n   * The reason the recognition was canceled.\n   * @member CancellationDetails.prototype.reason\n   * @function\n   * @public\n   * @returns {CancellationReason} Specifies the reason canceled.\n   */\n\n\n  get reason() {\n    return this.privReason;\n  }\n  /**\n   * In case of an unsuccessful recognition, provides details of the occurred error.\n   * @member CancellationDetails.prototype.errorDetails\n   * @function\n   * @public\n   * @returns {string} A String that represents the error details.\n   */\n\n\n  get errorDetails() {\n    return this.privErrorDetails;\n  }\n  /**\n   * The error code in case of an unsuccessful recognition.\n   * Added in version 1.1.0.\n   * @return An error code that represents the error reason.\n   */\n\n\n  get ErrorCode() {\n    return this.privErrorCode;\n  }\n\n}","map":{"version":3,"sources":["src/sdk/CancellationDetails.ts"],"names":[],"mappings":"AAAA;AACA;AAEA,SAAS,iCAAT,EAA4C,eAA5C,EAA6D,kBAA7D,QAAuF,0BAAvF;AACA,SACI,qBADJ,EAEI,kBAFJ,EAGI,iBAHJ,QAKO,WALP;AAOA;;;;;AAIA,OAAM,MAAO,mBAAP,CAA0B;AAK5B;;;;;;AAMA,EAAA,WAAA,CAAoB,MAApB,EAAgD,YAAhD,EAAsE,SAAtE,EAAsG;AAClG,SAAK,UAAL,GAAkB,MAAlB;AACA,SAAK,gBAAL,GAAwB,YAAxB;AACA,SAAK,aAAL,GAAqB,SAArB;AACH;AAED;;;;;;;;;;AAQO,SAAO,UAAP,CAAkB,MAAlB,EAAmE;AACtE,QAAI,MAAM,GAAG,kBAAkB,CAAC,KAAhC;AACA,QAAI,SAAS,GAA0B,qBAAqB,CAAC,OAA7D;;AAEA,QAAI,MAAM,YAAY,iBAAlB,IAAuC,CAAC,CAAC,MAAM,CAAC,IAApD,EAA0D;AACtD,YAAM,YAAY,GAAuB,kBAAkB,CAAC,QAAnB,CAA4B,MAAM,CAAC,IAAnC,CAAzC;AACA,MAAA,MAAM,GAAG,eAAe,CAAC,yBAAhB,CAA0C,YAAY,CAAC,iBAAvD,CAAT;AACH;;AAED,QAAI,CAAC,CAAC,MAAM,CAAC,UAAb,EAAyB;AACrB,MAAA,SAAS,GAAI,qBAA6B,CAAC,MAAM,CAAC,UAAP,CAAkB,WAAlB,CAA8B,iCAA9B,EAAiE,qBAAqB,CAAC,qBAAqB,CAAC,OAAvB,CAAtF,CAAD,CAA1C;AACH;;AAED,WAAO,IAAI,mBAAJ,CAAwB,MAAxB,EAAgC,MAAM,CAAC,YAAvC,EAAqD,SAArD,CAAP;AAEH;AAED;;;;;;;;;AAOA,MAAW,MAAX,GAAiB;AACb,WAAO,KAAK,UAAZ;AACH;AAED;;;;;;;;;AAOA,MAAW,YAAX,GAAuB;AACnB,WAAO,KAAK,gBAAZ;AACH;AAED;;;;;;;AAKA,MAAW,SAAX,GAAoB;AAChB,WAAO,KAAK,aAAZ;AACH;;AAvE2B","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\nimport { CancellationErrorCodePropertyName, EnumTranslation, SimpleSpeechPhrase } from \"../common.speech/Exports\";\r\nimport {\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    RecognitionResult,\r\n    SpeechSynthesisResult\r\n} from \"./Exports\";\r\n\r\n/**\r\n * Contains detailed information about why a result was canceled.\r\n * @class CancellationDetails\r\n */\r\nexport class CancellationDetails {\r\n    private privReason: CancellationReason;\r\n    private privErrorDetails: string;\r\n    private privErrorCode: CancellationErrorCode;\r\n\r\n    /**\r\n     * Creates and initializes an instance of this class.\r\n     * @constructor\r\n     * @param {CancellationReason} reason - The cancellation reason.\r\n     * @param {string} errorDetails - The error details, if provided.\r\n     */\r\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        this.privReason = reason;\r\n        this.privErrorDetails = errorDetails;\r\n        this.privErrorCode = errorCode;\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of CancellationDetails object for the canceled RecognitionResult.\r\n     * @member CancellationDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {RecognitionResult | SpeechSynthesisResult} result - The result that was canceled.\r\n     * @returns {CancellationDetails} The cancellation details object being created.\r\n     */\r\n    public static fromResult(result: RecognitionResult | SpeechSynthesisResult): CancellationDetails {\r\n        let reason = CancellationReason.Error;\r\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\r\n\r\n        if (result instanceof RecognitionResult && !!result.json) {\r\n            const simpleSpeech: SimpleSpeechPhrase = SimpleSpeechPhrase.fromJSON(result.json);\r\n            reason = EnumTranslation.implTranslateCancelResult(simpleSpeech.RecognitionStatus);\r\n        }\r\n\r\n        if (!!result.properties) {\r\n            errorCode = (CancellationErrorCode as any)[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])];\r\n        }\r\n\r\n        return new CancellationDetails(reason, result.errorDetails, errorCode);\r\n\r\n    }\r\n\r\n    /**\r\n     * The reason the recognition was canceled.\r\n     * @member CancellationDetails.prototype.reason\r\n     * @function\r\n     * @public\r\n     * @returns {CancellationReason} Specifies the reason canceled.\r\n     */\r\n    public get reason(): CancellationReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    /**\r\n     * In case of an unsuccessful recognition, provides details of the occurred error.\r\n     * @member CancellationDetails.prototype.errorDetails\r\n     * @function\r\n     * @public\r\n     * @returns {string} A String that represents the error details.\r\n     */\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    /**\r\n     * The error code in case of an unsuccessful recognition.\r\n     * Added in version 1.1.0.\r\n     * @return An error code that represents the error reason.\r\n     */\r\n    public get ErrorCode(): CancellationErrorCode {\r\n        return this.privErrorCode;\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}