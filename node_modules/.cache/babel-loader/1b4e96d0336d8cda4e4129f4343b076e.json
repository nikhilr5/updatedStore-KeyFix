{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilr5/Desktop/ScribeAR/updatedStore/src/components/TopSpace/Options/Record/index.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './index.css';\nimport { flip_recording } from '../../../../redux/actions';\nexport default function Record(props) {\n  const recording = state => state.recording;\n\n  const setting = useSelector(recording); // Get current value of recording.\n  // useDispatch returns the state modifying function, invoked below.\n\n  const dispatch = useDispatch(); // flip recording when space bar is pressed\n\n  document.body.onkeyup = function (e) {\n    // run function when any key is pressed\n    if (e.keyCode === 32) // keyCode 32 is the space bar\n      dispatch(flip_recording());\n  }; // record-btn-wrapper toggles between the two buttons using the TopSpace\n  // hidden/shown CSS.\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, setting ? \"Recording\" : \"Record\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"record-btn-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: setting ? \"record-btn hidden\" : \"record-btn shown\",\n    onClick: () => dispatch(flip_recording()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: setting ? \"stop-btn shown\" : \"stop-btn hidden\",\n    onClick: () => dispatch(flip_recording()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/nikhilr5/Desktop/ScribeAR/updatedStore/src/components/TopSpace/Options/Record/index.js"],"names":["React","useSelector","useDispatch","flip_recording","Record","props","recording","state","setting","dispatch","document","body","onkeyup","e","keyCode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,aAAP;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACjC,QAAMC,SAAS,GAAIC,KAAD,IAAWA,KAAK,CAACD,SAAnC;;AACA,QAAME,OAAO,GAAGP,WAAW,CAACK,SAAD,CAA3B,CAFiC,CAEM;AACvC;;AACA,QAAMG,QAAQ,GAAGP,WAAW,EAA5B,CAJiC,CAMjC;;AACAQ,EAAAA,QAAQ,CAACC,IAAT,CAAcC,OAAd,GAAwB,UAASC,CAAT,EAAY;AAAE;AACjC,QAAIA,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACjBL,MAAAA,QAAQ,CAACN,cAAc,EAAf,CAAR;AACT,GAHD,CAPiC,CAWjC;AACA;;;AACA,sBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMK,OAAO,GAAG,WAAH,GAAiB,QAD9B,eAEK;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK;AAAK,IAAA,SAAS,EAAEA,OAAO,GAAG,mBAAH,GAAyB,kBAAhD;AACK,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACN,cAAc,EAAf,CAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,eAGK;AAAK,IAAA,SAAS,EAAEK,OAAO,GAAG,gBAAH,GAAsB,iBAA7C;AACK,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACN,cAAc,EAAf,CAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHL,CAFL,CADL;AAWJ","sourcesContent":["import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport './index.css'\r\nimport { flip_recording } from '../../../../redux/actions'\r\n\r\nexport default function Record(props) {\r\n     const recording = (state) => state.recording\r\n     const setting = useSelector(recording) // Get current value of recording.\r\n     // useDispatch returns the state modifying function, invoked below.\r\n     const dispatch = useDispatch()\r\n\r\n     // flip recording when space bar is pressed\r\n     document.body.onkeyup = function(e) { // run function when any key is pressed\r\n          if (e.keyCode === 32) // keyCode 32 is the space bar\r\n               dispatch(flip_recording())\r\n     }\r\n     // record-btn-wrapper toggles between the two buttons using the TopSpace\r\n     // hidden/shown CSS.\r\n     return (\r\n          <div>\r\n               {setting ? \"Recording\" : \"Record\"}\r\n               <div className=\"record-btn-wrapper\">\r\n                    <div className={setting ? \"record-btn hidden\" : \"record-btn shown\"}\r\n                         onClick={() => dispatch(flip_recording())} />\r\n                    <div className={setting ? \"stop-btn shown\" : \"stop-btn hidden\"}\r\n                         onClick={() => dispatch(flip_recording())} />\r\n               </div>\r\n          </div>\r\n     )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}