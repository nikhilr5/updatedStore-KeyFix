{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n\n/**\n * Defines the possible reasons a recognition result might be generated.\n * @class ResultReason\n */\nexport var ResultReason;\n\n(function (ResultReason) {\n  /**\n   * Indicates speech could not be recognized. More details\n   * can be found in the NoMatchDetails object.\n   * @member ResultReason.NoMatch\n   */\n  ResultReason[ResultReason[\"NoMatch\"] = 0] = \"NoMatch\";\n  /**\n   * Indicates that the recognition was canceled. More details\n   * can be found using the CancellationDetails object.\n   * @member ResultReason.Canceled\n   */\n\n  ResultReason[ResultReason[\"Canceled\"] = 1] = \"Canceled\";\n  /**\n   * Indicates the speech result contains hypothesis text.\n   * @member ResultReason.RecognizedSpeech\n   */\n\n  ResultReason[ResultReason[\"RecognizingSpeech\"] = 2] = \"RecognizingSpeech\";\n  /**\n   * Indicates the speech result contains final text that has been recognized.\n   * Speech Recognition is now complete for this phrase.\n   * @member ResultReason.RecognizedSpeech\n   */\n\n  ResultReason[ResultReason[\"RecognizedSpeech\"] = 3] = \"RecognizedSpeech\";\n  /**\n   * Indicates the intent result contains hypothesis text and intent.\n   * @member ResultReason.RecognizingIntent\n   */\n\n  ResultReason[ResultReason[\"RecognizingIntent\"] = 4] = \"RecognizingIntent\";\n  /**\n   * Indicates the intent result contains final text and intent.\n   * Speech Recognition and Intent determination are now complete for this phrase.\n   * @member ResultReason.RecognizedIntent\n   */\n\n  ResultReason[ResultReason[\"RecognizedIntent\"] = 5] = \"RecognizedIntent\";\n  /**\n   * Indicates the translation result contains hypothesis text and its translation(s).\n   * @member ResultReason.TranslatingSpeech\n   */\n\n  ResultReason[ResultReason[\"TranslatingSpeech\"] = 6] = \"TranslatingSpeech\";\n  /**\n   * Indicates the translation result contains final text and corresponding translation(s).\n   * Speech Recognition and Translation are now complete for this phrase.\n   * @member ResultReason.TranslatedSpeech\n   */\n\n  ResultReason[ResultReason[\"TranslatedSpeech\"] = 7] = \"TranslatedSpeech\";\n  /**\n   * Indicates the synthesized audio result contains a non-zero amount of audio data\n   * @member ResultReason.SynthesizingAudio\n   */\n\n  ResultReason[ResultReason[\"SynthesizingAudio\"] = 8] = \"SynthesizingAudio\";\n  /**\n   * Indicates the synthesized audio is now complete for this phrase.\n   * @member ResultReason.SynthesizingAudioCompleted\n   */\n\n  ResultReason[ResultReason[\"SynthesizingAudioCompleted\"] = 9] = \"SynthesizingAudioCompleted\";\n  /**\n   * Indicates the speech synthesis is now started\n   * @member ResultReason.SynthesizingAudioStarted\n   */\n\n  ResultReason[ResultReason[\"SynthesizingAudioStarted\"] = 10] = \"SynthesizingAudioStarted\";\n})(ResultReason || (ResultReason = {}));","map":{"version":3,"sources":["src/sdk/ResultReason.ts"],"names":[],"mappings":"AAAA;AACA;;AAEA;;;;AAIA,OAAA,IAAY,YAAZ;;AAAA,CAAA,UAAY,YAAZ,EAAwB;AACpB;;;;;AAKA,EAAA,YAAA,CAAA,YAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AAEA;;;;;;AAKA,EAAA,YAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AAEA;;;;;AAIA,EAAA,YAAA,CAAA,YAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,mBAAA;AAEA;;;;;;AAKA,EAAA,YAAA,CAAA,YAAA,CAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,kBAAA;AAEA;;;;;AAIA,EAAA,YAAA,CAAA,YAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,mBAAA;AAEA;;;;;;AAKA,EAAA,YAAA,CAAA,YAAA,CAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,kBAAA;AAEA;;;;;AAIA,EAAA,YAAA,CAAA,YAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,mBAAA;AAEA;;;;;;AAKA,EAAA,YAAA,CAAA,YAAA,CAAA,kBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,kBAAA;AAEA;;;;;AAIA,EAAA,YAAA,CAAA,YAAA,CAAA,mBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,mBAAA;AAEA;;;;;AAIA,EAAA,YAAA,CAAA,YAAA,CAAA,4BAAA,CAAA,GAAA,CAAA,CAAA,GAAA,4BAAA;AAEA;;;;;AAIA,EAAA,YAAA,CAAA,YAAA,CAAA,0BAAA,CAAA,GAAA,EAAA,CAAA,GAAA,0BAAA;AACH,CAvED,EAAY,YAAY,KAAZ,YAAY,GAAA,EAAA,CAAxB","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/**\r\n * Defines the possible reasons a recognition result might be generated.\r\n * @class ResultReason\r\n */\r\nexport enum ResultReason {\r\n    /**\r\n     * Indicates speech could not be recognized. More details\r\n     * can be found in the NoMatchDetails object.\r\n     * @member ResultReason.NoMatch\r\n     */\r\n    NoMatch,\r\n\r\n    /**\r\n     * Indicates that the recognition was canceled. More details\r\n     * can be found using the CancellationDetails object.\r\n     * @member ResultReason.Canceled\r\n     */\r\n    Canceled,\r\n\r\n    /**\r\n     * Indicates the speech result contains hypothesis text.\r\n     * @member ResultReason.RecognizedSpeech\r\n     */\r\n    RecognizingSpeech,\r\n\r\n    /**\r\n     * Indicates the speech result contains final text that has been recognized.\r\n     * Speech Recognition is now complete for this phrase.\r\n     * @member ResultReason.RecognizedSpeech\r\n     */\r\n    RecognizedSpeech,\r\n\r\n    /**\r\n     * Indicates the intent result contains hypothesis text and intent.\r\n     * @member ResultReason.RecognizingIntent\r\n     */\r\n    RecognizingIntent,\r\n\r\n    /**\r\n     * Indicates the intent result contains final text and intent.\r\n     * Speech Recognition and Intent determination are now complete for this phrase.\r\n     * @member ResultReason.RecognizedIntent\r\n     */\r\n    RecognizedIntent,\r\n\r\n    /**\r\n     * Indicates the translation result contains hypothesis text and its translation(s).\r\n     * @member ResultReason.TranslatingSpeech\r\n     */\r\n    TranslatingSpeech,\r\n\r\n    /**\r\n     * Indicates the translation result contains final text and corresponding translation(s).\r\n     * Speech Recognition and Translation are now complete for this phrase.\r\n     * @member ResultReason.TranslatedSpeech\r\n     */\r\n    TranslatedSpeech,\r\n\r\n    /**\r\n     * Indicates the synthesized audio result contains a non-zero amount of audio data\r\n     * @member ResultReason.SynthesizingAudio\r\n     */\r\n    SynthesizingAudio,\r\n\r\n    /**\r\n     * Indicates the synthesized audio is now complete for this phrase.\r\n     * @member ResultReason.SynthesizingAudioCompleted\r\n     */\r\n    SynthesizingAudioCompleted,\r\n\r\n    /**\r\n     * Indicates the speech synthesis is now started\r\n     * @member ResultReason.SynthesizingAudioStarted\r\n     */\r\n    SynthesizingAudioStarted,\r\n}\r\n"]},"metadata":{},"sourceType":"module"}